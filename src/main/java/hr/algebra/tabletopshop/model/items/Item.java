package hr.algebra.tabletopshop.model.items;

import jakarta.validation.constraints.*;
import lombok.*;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.io.Serializable;

@Data
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode
@Document("itemslist")
@ToString(doNotUseGetters = true)
public class Item implements Serializable {
    
    @EqualsAndHashCode.Exclude
    @Id
    @ToString.Exclude
    private String id; // this is id that is generated by mongodb itself
    
    @EqualsAndHashCode.Exclude
    @NotNull(message = "Item id must exist!")
    @Positive(message = "Item id must be a positive number!")
    @ToString.Exclude
    private Integer itemId; // this is the id that I would use to get items resorted into some order etc
    
    @NotNull(message = "Name must exist!")
    @Size(min = 1, max = 100, message = "Name must have more than 1 and less then 100 characters!")
    private String name;
    
    @NotNull(message = "Category must be assigned!")
    private Category category;
    
    @NotNull(message = "Description must exist!")
    @Size(min = 1, max = 200, message = "Description must have more than 1 and less then 200 characters!")
    private String description;
    
    @NotNull(message = "Quantity has to be given!")
    @PositiveOrZero(message = "Quantity must be positive or zero!")
    private Integer quantity;
    
    @NotNull(message = "Price must exist!")
    @PositiveOrZero(message = "Price must be positive or zero!")
    @DecimalMax(value = "999.99", message = "Price must be less then 999.99â‚¬!")
    private Double price;
    
    public Item(@NotNull(message = "Item id must exist!") Integer itemId, @NotNull(message = "Name must exist!") String name, @NotNull(message = "Category must be assigned!") Category category, @NotNull(message = "Description must exist!") String description, @NotNull(message = "Quantity has to be given!") Integer quantity, @NotNull(message = "Price must exist!") Double price) {
        this.itemId = itemId;
        this.name = name;
        this.category = category;
        this.description = description;
        this.quantity = quantity;
        this.price = price;
    }
    
    public void addQuantityToStock(Integer quantity) {
        this.quantity += quantity;
    }
    
    public void removeQuantityFromStock(Integer quantity) {
        this.quantity -= quantity;
    }
}
